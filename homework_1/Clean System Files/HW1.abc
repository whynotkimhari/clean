.comp 920 000111010010000
.start __HW1_Start
.depend "_SystemEnumStrict" "20230927194349"
.depend "_SystemStrictLists" "20230927194349"
.depend "StdStrictLists" "20230927194349"
.depend "_SystemEnum" "20230927194350"
.depend "StdEnum" "20230927194350"
.depend "StdMisc" "20230927194349"
.depend "StdFunctions" "20230927194350"
.depend "StdCharList" "20230927194349"
.depend "StdTuple" "20230927194350"
.depend "StdOrdList" "20230927194350"
.depend "StdList" "20230927194349"
.depend "StdClass" "20230927194350"
.depend "StdFile" "20230927194349"
.depend "StdString" "20230927194349"
.depend "_SystemArray" "20230927194349"
.depend "StdArray" "20230927194349"
.depend "StdChar" "20230927194350"
.depend "StdReal" "20230927194350"
.depend "StdInt" "20230927194349"
.depend "StdOverloaded" "20230927194349"
.depend "StdBool" "20230927194350"
.depend "StdEnv" "20230927194350"
.module m_HW1 "HW1" "20231003171745"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s*;9
.implab e_StdInt_s==;16
.export __HW1_Start
.o 0 0
__HW1_Start
	build _ 0 n2
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n2
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea2
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea2
.o 0 0
s2
	pushI 1
	pushI 2
	pushI 1
.d 0 3 iii
	jmp s1
.o 0 3 iii
s1
	pushI 0
	push_b 1
	eqI
	jmp_true then.2
	pushI 1
	push_b 1
	eqI
	jmp_false else.1
then.2
	pushI 0
	push_b 2
	eqI
	jmp_true then.4
	pushI 1
	push_b 2
	eqI
	jmp_false else.1
then.4
	pushI 0
	push_b 3
	eqI
	jmp_true then.1
	pushI 1
	push_b 3
	eqI
	jmp_false else.1
then.1
	push_b 2
	pushI 1
	mulI
	push_b 2
	pushI 2
	mulI
	push_b 2
	pushI 4
	mulI
	addI
	update_b 1 4
	updatepop_b 0 3
	addI
.d 0 1 i
	rtn
else.1
	buildAC "One of the inputs is NOT a binary digit!"
	pop_b 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
	pushI_a 0
	pop_a 1
.d 0 1 i
	rtn
